#!/bin/sh

#
# recordctl - Enable/disable audio recording in the OpenBSD kernel
#
# CHANGE LOG:
#
# v0.1   - 2024-07-29 - Morgan Aldridge <morgant@makkintosshu.com>
#                       Initial version.
#
# LICENSE:
#
# Copyright (c) 2024 Morgan Aldridge
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

quiet=""
mode="set"
audio=false
video=false
state=""
action=""

usage() {
  echo "Usage: $(basename "$0") [-q] [-t | -m] [-a] [-v] <state>"
}

# parse argument
while getopts ahmqtv arg ; do
  case "$arg" in
    h)
      usage && exit
      ;;
    a)
      audio=true
      ;;
    v)
      video=true
      ;;
    t)
      mode="toggle"
      ;;
    m)
      mode="monitor"
      ;;
    q)
      quiet="-q"
      ;;
    ?)
      usage && exit 2
      ;;
  esac
done
shift $((OPTIND - 1))
[ $# -gt 1 ] && usage && exit 2
case "$1" in
  1|yes|on|enable)
    state=1
    ;;
  0|no|off|disable)
    state=0
    ;;
  "")
    ;;
  *)
    usage && exit 2
    ;;
esac

# default to applying record state to both audio & video if neither was explicitly specified
if ! $audio && ! $video ; then
  audio=true
  video=true
fi

# default to toggling record state if no state was specified (and not monitoring)
if [ -z "$state" -a "$mode" != "monitor" ] ; then
  mode="toggle"
fi

case "$mode" in
  set)
    $audio && sysctl $quiet kern.audio.record="$state"
    $video && sysctl $quiet kern.video.record="$state"
    ;;
  toggle)
    $audio && sysctl $quiet kern.audio.record="$(( ! $(sysctl -n kern.audio.record) ))"
    $video && sysctl $quiet kern.video.record="$(( ! $(sysctl -n kern.video.record) ))"
    ;;
  monitor)
    echo "Not yet implemented! Exiting." && exit
    ;;
esac
